@model D.Models.Product
@using D.Models
@{
    ViewBag.Title = "Карточка товара";
}
<div class="container">
    <ol class="breadcrumb">
        <li><a href="@Url.Action("Index","Home")">Главная</a></li>
        <li><a href="@Url.Action("Index","Product")">Товары</a></li>
        <li class="active">Карточка товара</li>

    </ol>
    <div class="well bs-component">
        <div class="row">
            <div class="col-xs-12 col-lg-7">
                <fieldset>
                    <legend>
                        <ul class="nav">
                            <li class="">
                                <a data-toggle="dropdown" class="dropdown-toggle" style="color:black;">Информация о товаре  <span class="caret"></span></a>
                                <ul class="dropdown-menu">
                                    <li><a href="#EditModal" data-toggle="modal"> Редактировать</a> </li>
                                    <li  ><a  href="#DeleteModal" data-toggle="modal">Удалить</a></li>
                                    <li class="divider"></li>
                                    <li><a href="#mdAddProv" data-toggle="modal">Добавить поставщика</a></li>
                                </ul>
                            </li>
                        </ul></legend>
                    <div>
                        <dl class="dl-horizontal">
                            <dt>
                                Обозначение:
                            </dt>

                            <dd>
                                @Model.Designation
                            </dd>
                            <dt>
                                Наименование:
                            </dt>

                            <dd>
                                @Html.DisplayName(Model.Name)
                            </dd>
                            <dt>Краткое описание:</dt>
                            <dd>@Model.Description</dd>

                            <dt>
                                Единица измерения:
                            </dt>

                            <dd>
                                @Html.DisplayName(Model.Unit_of_measurement)
                            </dd>

                            <dt>
                                Остаток:
                            </dt>

                            <dd>
                                @Html.DisplayName(Model.Balance.ToString())
                            </dd>

                            <dt>
                                Срок поставки:
                            </dt>

                            <dd>
                                @Model.Delivery_time
                            </dd>

                            <dt>
                                Вес:
                            </dt>

                            <dd>
                                @Model.Weight
                            </dd>

                            <dt>
                                Цена:
                            </dt>

                            <dd>
                                @{string price = Model.Price.Value.ToString("0.00") ?? "";}
                                @price
                            </dd>

                            <dt>
                                Цена с НДС:
                            </dt>

                            <dd>
                                @{ string t = Model.Price_with_vat != null ? Model.Price_with_vat.Value.ToString("0.00") : "";}
                                @t
                            </dd>

                        </dl>
                    </div>
                </fieldset>
            </div>
            <div class="col-xs-12 col-lg-5">
                <div class="test-border tprovider">
                    <table class="table-bordered table-striped" id="LinkedProvider">
                        <col width="35%">
                        <col width="35%">
                        <thead>
                            <tr><th class="text-center" colspan="3" style="border:none;">Связанные поставщики</th></tr>
                            <tr>
                                <th class="text-center">УНП</th>
                                <th class="text-center">Поставщик</th>
                                <th class="text-center">Цена</th>
                                @{ if ((ViewBag.ProvPrice as IQueryable<SupplierPrice>).Count() > 1)
                                    {
                                        <th class="text-center"></th>}
                                }
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (SupplierPrice i in (ViewBag.ProvPrice as IQueryable<SupplierPrice>))
            {
                                <tr>
                                    <td class="text-center">@Html.DisplayName(i.Supplier.SupplierPAN.ToString())</td>
                                    <td class="text-center">@Html.DisplayName(i.Supplier.Name)</td>
                                    @{ string str = i.Price != null ? i.Price.Value.ToString("0.00") : "-";}
                                    <td class="text-center">@Html.DisplayName(str)</td>

                                    @{ if ((ViewBag.ProvPrice as IQueryable<SupplierPrice>).Count() > 1)
                                        {
                                            <td class="text-center">
                                                @using (Html.BeginForm("DeleteP", "Product", new { id = Model.ProductID, p = i.SupplierPAN }, FormMethod.Post))
                                                {
                                                    <input type="image" src="~/Content/png/error.png" />
                                                }
                                            </td>
                                        }
                                    }

                                </tr>
                                        }
                        </tbody>
                    </table>
                </div>

            </div>
        </div>
    </div>
</div>

<script>
$(document).ready(function(){

    $('#LinkedProvider').DataTable({

        "processing": true,
        "order": [],
        fixedHeader: true,
        "autoWidth": false,
        "language": {
            "lengthMenu": "Показывать _MENU_ записей",
            "info": "Показаны записи с _START_ по _END_ из _TOTAL_ записей",
            "infoFiltered": " (Найдено из _MAX_ записей)",
            "emptyTable": "Нет данных для отображения",
            "infoEmpty": "Показаны записи с 0 по 0 из 0 записей",
            "infoPostFix":    "",
            "thousands":      ",",
            "loadingRecords": "Загрузка...",
            "processing":     "Обработка...",
            "search":         "Поиск:",
            "zeroRecords":    "Ничего не найдено",
            "paginate": {
                "first":      "Первая",
                "last":       "Последняя",
                "next":       "Следующая",
                "previous":   "Предыдущая"
            }
        },

        "dom": "t",
        "columnDefs": [
    { "width": "25%", "targets": 0 },
    { "width": "25%", "targets": 1 }
        ],
        fixedHeader: true
        //"pagingType": "full_numbers"
        });

    $('#tbProviders').DataTable({

        "lengthMenu": [[10, 25, 50, -1], [10, 25, 50, "Все"]],

        "processing": true,
        "order": [[1, 'desc']],
        fixedHeader: true,
        "autoWidth": false,
        "language": {
            "lengthMenu": "Показывать _MENU_ записей",
            "info": "Показаны записи с _START_ по _END_ из _TOTAL_ записей",
            "infoFiltered": " (Найдено из _MAX_ записей)",
            "emptyTable": "Нет данных для отображения",
            "infoEmpty": "Показаны записи с 0 по 0 из 0 записей",
            "infoPostFix": "",
            "thousands": ",",
            "loadingRecords": "Загрузка...",
            "processing": "Обработка...",
            "search": "Поиск:",
            "zeroRecords": "Ничего не найдено",
            "paginate": {
                "first": "Первая",
                "last": "Последняя",
                "next": "Следующая",
                "previous": "Предыдущая"
            }
        },

        "dom": "<'row'<'col-sm-6'l><'col-sm-6'f>>" +
                "<'row'<'col-sm-12'tr>>" +
                 "<'row'<'col-sm-0'><'col-sm-12'p>>",
        "columnDefs": [
    { "width": "25%", "targets": 0 },
    { "width": "25%", "targets": 1 }
        ],
        fixedHeader: true,
        "paging": true
    });


});
</script>

<div id="DeleteModal" class="modal fade">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
                <h4 class="modal-title">Вы действительно хотите удалить этот товар?</h4>
            </div>
            <div class="modal-body">
                    <dl class="dl-horizontal">
                        <dt>
                            @Html.DisplayNameFor(model => model.Name)
                        </dt>

                        <dd>
                            @Html.DisplayFor(model => model.Name)
                        </dd>

                        <dt>
                            @Html.DisplayNameFor(model => model.Description)
                        </dt>

                        <dd>
                            @Html.DisplayFor(model => model.Description)
                        </dd>

                        <dt>
                            @Html.DisplayNameFor(model => model.Price)
                        </dt>

                        <dd>
                            @Html.DisplayFor(model => model.Price)
                        </dd>

                        <dt>
                            @Html.DisplayNameFor(model => model.Balance)
                        </dt>

                        <dd>
                            @Html.DisplayFor(model => model.Balance)
                        </dd>

                        <dt>
                            @Html.DisplayNameFor(model => model.Unit_of_measurement)
                        </dt>

                        <dd>
                            @Html.DisplayFor(model => model.Unit_of_measurement)
                        </dd>

                        <dt>
                            @Html.DisplayNameFor(model => model.Delivery_time)
                        </dt>

                        <dd>
                            @Html.DisplayFor(model => model.Delivery_time)
                        </dd>

                        <dt>
                            @Html.DisplayNameFor(model => model.Weight)
                        </dt>

                        <dd>
                            @Html.DisplayFor(model => model.Weight)
                        </dd>

                        <dt>
                            @Html.DisplayNameFor(model => model.Price_with_vat)
                        </dt>

                        <dd>
                            @Html.DisplayFor(model => model.Price_with_vat)
                        </dd>
                </dl>
              </div>
            <div class="modal-footer">
                @using (Html.BeginForm("Delete", "Product", new { id = Model.ProductID }, FormMethod.Post))
            {
                @Html.AntiForgeryToken()
                    <button type="button" class="btn btn-default" data-dismiss="modal">Закрыть</button>
                <button type="submit" class="btn btn-danger">Удалить</button>
                }
            </div>
            </div>
           </div>
    </div>
<script>
      $(function() {
          $('input').change(function () {
          var formValid = true;
          var formGroup = $(this).parents('.form-group');
          var glyphicon = formGroup.find('.form-control-feedback');
          if (this.checkValidity()) {
            formGroup.addClass('has-success').removeClass('has-error');
            glyphicon.addClass('glyphicon-ok').removeClass('glyphicon-remove');
          } else {
            formGroup.addClass('has-error').removeClass('has-success');
            glyphicon.addClass('glyphicon-remove').removeClass('glyphicon-ok');
            formValid = false;
          }
      });
    });
</script>
<div id="EditModal" class="modal fade">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
                <h4 class="modal-title">Редактирование товара</h4>
            </div>
            <div class="modal-body">
                <div class="container">
                    <div class="row">
                        <div class="col-xs-12 col-lg-6">
                            <fieldset>
                                @using (Html.BeginForm("Edit", "Product", FormMethod.Post, new { @class = "form-horizontal" }))
                                {
                                @Html.AntiForgeryToken()
                                <div class="form-horizontal">
                                    @Html.HiddenFor(model => model.ProductID)
                                    <div class="form-group has-feedback">
                                        @Html.LabelFor(model => model.Designation, htmlAttributes: new { @class = "control-label col-md-3" })
                                        <div class="col-md-7">
                                            @Html.EditorFor(model => model.Designation, new { htmlAttributes = new { @class = "form-control", @pattern = "{0,49}" } })
                                            <span class="glyphicon form-control-feedback"></span>
                                        </div>
                                    </div>
                                    <div class="form-group has-feedback">
                                        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-3" })
                                        <div class="col-md-7">
                                            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", @pattern = "[^\\s][A-Za-zА-Яа-яЁё\\s]{1,119}", @required = "required" } })
                                            <span class="glyphicon form-control-feedback"></span>
                                        </div>
                                    </div>
                                    <div class="form-group has-feedback">
                                        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-3" })
                                        <div class="col-md-7">
                                            @Html.TextAreaFor(model => model.Description, 2, 46, new { @class = "form-control", @maxlength="299" })
                                            <span class="glyphicon form-control-feedback"></span>
                                        </div>
                                    </div>
                                    <div class="form-group has-feedback">
                                        @Html.LabelFor(model => model.Unit_of_measurement, htmlAttributes: new { @class = "control-label col-md-3" })
                                        <div class="col-md-7">
                                            @Html.DropDownListFor(model => model.Unit_of_measurement, new SelectList(new[] { "шт", "комплект", "кг", "л", "т", "г" }), new { @class = "form-control" })
                                            <span class="glyphicon form-control-feedback"></span>
                                        </div>
                                    </div>
                                    <div class="form-group has-feedback">
                                        @Html.LabelFor(model => model.Balance, htmlAttributes: new { @class = "control-label col-md-3" })
                                        <div class="col-md-7">
                                            @Html.EditorFor(model => model.Balance, new { htmlAttributes = new { @class = "form-control", @required = "required", @min = "0", @max = "2147483647", @pattern = "[0-9]{1,10}" } })
                                            <span class="glyphicon form-control-feedback"></span>
                                        </div>
                                    </div>
                                    <div class="form-group has-feedback">
                                        @Html.LabelFor(model => model.Delivery_time, htmlAttributes: new { @class = "control-label col-md-3" })
                                        <div class="col-md-7">
                                            @Html.EditorFor(model => model.Delivery_time, new { htmlAttributes = new { @class = "form-control", @required = "required", @min = "0", @max = "2147483647", @pattern = "[0-9]{1,10}" } })
                                            <span class="glyphicon form-control-feedback"></span>
                                        </div>
                                    </div>
                                    <div class="form-group has-feedback">
                                        @Html.LabelFor(model => model.Weight, htmlAttributes: new { @class = "control-label col-md-3" })
                                        <div class="col-md-7">
                                            @Html.EditorFor(model => model.Weight, new { htmlAttributes = new { @class = "form-control", @required = "required", @min = "0", @max = "2147483647", @pattern = "[0-9]{1,10}" } })
                                            <span class="glyphicon form-control-feedback"></span>
                                        </div>
                                    </div>
                                    <div class="form-group has-feedback">
                                        @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-3" })
                                        <div class="col-md-7">
                                            @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control", @Value = "0", @max = "100000000000000.00", @pattern = @"\d+(,\d{1,2})?" } })
                                            <span class="glyphicon form-control-feedback"></span>
                                        </div>
                                    </div>
                                    <div class="modal-footer">
                                        <button type="button" class="btn btn-default" data-dismiss="modal">Закрыть</button>
                                        <button type="submit" class="btn btn-success">Сохранить</button>
                                    </div>
                                </div>
                                }
                            </fieldset>
                        </div>
                        <div class="col-xs-0 col-lg-6"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div id="mdAddProv" class="modal modal-lg faden" data-keyboard="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
                <h4 class="modal-title">Добавление поставщика для товара</h4>
            </div>
            <div class="modal-body">
                <div class="container">
                    <div class="row">
                        <div class="col-xs-12 col-lg-6">
                                <fieldset>
                                    @using (Html.BeginForm("AddP", "Product"))
                                    {
                                        @Html.AntiForgeryToken()
                                        <div class="form-horizontal">
                                            <div class="form-group">
                                                @Html.Label("Обозначение", htmlAttributes: new { @class = "control-label col-md-3" })
                                                <div class="col-md-7">
                                                    @Html.Hidden("ProductID", Model.ProductID)
                                                    @Html.TextBox("Designation", "", new { @class = "form-control", @readonly = "readonly", @Value = Model.Designation })
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                @Html.Label("Наименование", htmlAttributes: new { @class = "control-label col-md-3" })
                                                <div class="col-md-7">
                                                    @Html.TextBox("Name", "", new { @class = "form-control", @readonly = "readonly", @Value = Model.Name })
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                <label class="control-label col-md-3">Поставщик</label>
                                                <div class="col-md-7">
                                                    <div class="input-group">
                                                        <input id="hidNameProv" type="hidden" value="" name="SupplierPAN" />
                                                        <input id="indoorText" class="form-control"  name="tbxNameProv" type="text" value="" required data-readonly />
                                                        <div class="input-group-btn">
                                                            <a href="#ChoiceProv" class="btn btn-default" data-toggle="modal">+</a>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="form-group has-feedback">
                                                @Html.Label("Цена", htmlAttributes: new { @class = "control-label col-md-3" })
                                                <div class="col-md-7">
                                                    @Html.TextBox("Price",null,new { @class = "form-control", @pattern = @"\d+(,\d{1,2})?" } )
                                                    <span class="glyphicon form-control-feedback"></span>
                                                </div>
                                            </div>
                                            <div class="modal-footer">
                                                <button type="button" class="btn btn-default" data-dismiss="modal">Закрыть</button>
                                                <button type="submit" class="btn btn-success">Добавить</button>
                                            </div>
                                        </div>
                                    }
                                </fieldset>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div id="ChoiceProv" class="modal fade">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
                <h4 class="modal-title">Выберите поставщика</h4>
            </div>
            <div class="modal-body">
                <table class="table-bordered table-striped modalTable" id="tbProviders">
                    <colgroup>
                        <col width="5%">
                        <col width="10%">
                    </colgroup>
                    <thead>
                        <tr>
                            <th class="text-center">УНП</th>
                            <th class="text-center">Поставщик</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (Supplier item in (ViewBag.Providers as IQueryable<Supplier>))
            {
                            <tr class="text-center">
                                <td>
                                    <strong>@Html.HiddenFor(modelItem => item.SupplierPAN) @Html.DisplayTextFor(modelItem => item.SupplierPAN)</strong>
                                </td>
                                <td><strong>@Html.DisplayTextFor(modelItem => item.Name)</strong></td>
                            </tr>
             }
                    </tbody>
                </table>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Закрыть</button>
                <button type="button" class="btn btn-primary" id="btChoiceProv" disabled>Выбрать</button>
            </div>
        </div>
    </div>
</div>

@section scripts {
    <script type="text/javascript" src="~/Scripts/MainJavaScript.min.js"></script>
    <script type="text/javascript" src="~/Scripts/DataTables/datatables.min.js"></script>
    <link rel="stylesheet" type="text/css" href="~/Scripts/DataTables/datatables.min.css" />
    <link rel="stylesheet" type="text/css" href="~/Content/MainCss.min.css" />
}