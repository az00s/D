@model IEnumerable<D.Models.Товар>
@{

    AjaxOptions ajaxOptions = new AjaxOptions
    {
        UpdateTargetId = "table",
        HttpMethod = "Post",


    };
}
@Html.Partial("_SideMenuGoods")
<script>
    $(document).ready(function () {



        $(".table-hover tbody tr td:not(.dontPrint)").click(

            function () {



                var ID = $(this).parent().find("input[name='item.ID_товара']").val();
                var url = "@Url.Action("Details")/" + ID;

                document.location.href = url;
                //.done(function (data) {
                //    $('.body-content').html(data);
                //});

            });

        $('#moreButtons').click(function () {

            if ($(".moreButtons").css('display') == 'block')

            { $(".moreButtons").css('display', 'none'); }

            else $(".moreButtons").css('display', 'block');
        });

    });
</script>
<div id="table">
    <div id="header" class="test-border1">
        <table class="table-bordered table-striped table-hover dontPrint" id="TableHeader">

            <thead>
                <tr>
                    <th>
                        @Html.ActionLink("Обозначение", "Table", new { sort = ViewBag.NumSortParm, search = ViewBag.SearhRequest }, new { @class = "Theader" })@Html.Raw(ViewBag.Num)

                    </th>
                    <th>
                        @Html.ActionLink("Наименование", "Table", new { sort = ViewBag.NameSortParm, search = ViewBag.SearhRequest }, new { @class = "Theader" })@Html.Raw(ViewBag.Name)
                    </th>

                    <th>
                        @Html.DisplayNameFor(model => model.Единица_измерения)
                    </th>

                    <th>
                        @Html.ActionLink("Остаток", "Table", new { sort = ViewBag.OstSortParm, search = ViewBag.SearhRequest }, new { @class = "Theader" })@Html.Raw(ViewBag.Ost)
                    </th>
                    <th>
                        @Html.ActionLink("Поставка, дней", "Table", new { sort = ViewBag.DaySortParm, search = ViewBag.SearhRequest }, new { @class = "Theader" })@Html.Raw(ViewBag.Day)
                    </th>
                    <th>
                        @Html.ActionLink("Вес, г", "Table", new { sort = ViewBag.WeightSortParm, search = ViewBag.SearhRequest }, new { @class = "Theader" })@Html.Raw(ViewBag.Weight)
                    </th>
                    <th>
                        @Html.ActionLink("Цена", "Table", new { sort = ViewBag.PriceSortParm, search = ViewBag.SearhRequest }, new { @class = "Theader" })@Html.Raw(ViewBag.Price)
                    </th>

                    <th>
                        @Html.ActionLink("Цена с НДС", "Table", new { sort = ViewBag.PriceVatSortParm, search = ViewBag.SearhRequest }, new { @class = "Theader" })@Html.Raw(ViewBag.PriceVat)
                    </th>
                    <th class="dontPrint"></th>
                </tr>
            </thead>
        </table>
    </div>
    <div id="table-container">
        <div class="test-border">
            <table class="table-bordered table-striped table-hover" id="Table">

                <thead>
                    <tr>
                        <th>

                            @Html.ActionLink("Обозначение ", "Table", new { sort = ViewBag.NumSortParm, search = ViewBag.SearhRequest }, new { @class = "Theader" })@Html.Raw(ViewBag.Num)

                        </th>
                        <th>
                            @Html.ActionLink("Наименование", "Table", new { sort = ViewBag.NameSortParm, search = ViewBag.SearhRequest }, new { @class = "Theader" })@Html.Raw(ViewBag.Name)
                        </th>

                        <th>
                            @Html.DisplayNameFor(model => model.Единица_измерения)
                        </th>

                        <th>
                            @Html.ActionLink("Остаток", "Table", new { sort = ViewBag.OstSortParm, search = ViewBag.SearhRequest }, new { @class = "Theader" })@Html.Raw(ViewBag.Ost)
                        </th>
                        <th>
                            @Html.ActionLink("Поставка, дней", "Table", new { sort = ViewBag.DaySortParm, search = ViewBag.SearhRequest }, new { @class = "Theader" })@Html.Raw(ViewBag.Day)
                        </th>
                        <th>
                            @Html.ActionLink("Вес, г", "Table", new { sort = ViewBag.WeightSortParm, search = ViewBag.SearhRequest }, new { @class = "Theader" })@Html.Raw(ViewBag.Weight)
                        </th>
                        <th>
                            @Html.ActionLink("Цена", "Table", new { sort = ViewBag.PriceSortParm, search = ViewBag.SearhRequest }, new { @class = "Theader" })@Html.Raw(ViewBag.Price)
                        </th>

                        <th>
                            @Html.ActionLink("Цена с НДС", "Table", new { sort = ViewBag.PriceVatSortParm, search = ViewBag.SearhRequest }, new { @class = "Theader" })@Html.Raw(ViewBag.PriceVat)
                        </th>
                        <th class="dontPrint"></th>
                    </tr>
                </thead>

                <tbody>

                    @foreach (var item in Model)
            {
                        <tr>
                            <td class="text-left">
                                @Html.DisplayFor(modelItem => item.Обозначение)
                                @Html.HiddenFor(modelItem => item.ID_товара)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Наименование)
                            </td>

                            <td>
                                @Html.DisplayFor(modelItem => item.Единица_измерения)
                            </td>

                            <td>
                                @Html.DisplayFor(modelItem => item.Остаток_на_складе)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Срок_поставки)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Вес)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Цена)
                            </td>

                            <td>
                                @Html.DisplayFor(modelItem => item.Цена_с_НДС)
                            </td>
                            <td class="dontPrint">
                                <a href='@Url.Action("Edit",new { id = item.ID_товара }  )'><img src='~/Content/png/edit.png' /></a>
                                <a href='@Url.Action("Delete",new { id = item.ID_товара })'><img src='~/Content/png/error.png' /></a>

                            </td>
                        </tr>
                    }

                </tbody>


            </table>
        </div>
    </div>

    <div class="btn-group buttons">

        @{

            if (ViewBag.PageCount > 10)
            {
            @Html.ActionLink("<", "Table", new { page = ViewBag.CurrentPage - 1 == 0 ? 1 : ViewBag.CurrentPage - 1, sort = ViewBag.SortParam, search = ViewBag.SearhRequest }, new { @class = "btn btn-default pageBtn" })
            }

            for (long i = 1; i <= ViewBag.PageCountResult; i++)
            {
                if (i == ViewBag.CurrentPage)
                {@Html.ActionLink(i.ToString(), "Table", new { page = i, sort = ViewBag.SortParam, search = ViewBag.SearhRequest }, new { @class = "btn btn-primary selected" }) }

                    else
                    {@Html.ActionLink(i.ToString(), "Table", new { page = i, sort = ViewBag.SortParam, search = ViewBag.SearhRequest }, new { @class = "btn btn-default pageBtn" })}
                }


            
            if (ViewBag.PageCount > 10)
            {
                <a href="#" class="glyphicon glyphicon-circle-arrow-down btn btn-default pageBtn" id="moreButtons"></a>
                <div class="moreButtons">

                    @{
                        for (long i = 8; i <= ViewBag.PageCount - 7; i++)
                        {
                            if (i == ViewBag.CurrentPage)
                            {@Html.ActionLink(i.ToString(), "Table", new { page = i, sort = ViewBag.SortParam, search = ViewBag.SearhRequest }, new { @class = "btn-sm btn-primary" }) }

                            else
                            {@Html.ActionLink(i.ToString(), "Table", new { page = i, sort = ViewBag.SortParam, search = ViewBag.SearhRequest }, new { @class = "btn-sm btn-default pageBtn" })}
                        }
                    }



                </div>


                        for (long i = ViewBag.PageCount - 6; i <= ViewBag.PageCount; i++)
                        {
                            if (i == ViewBag.CurrentPage)
                            {@Html.ActionLink(i.ToString(), "Table", new { page = i, sort = ViewBag.SortParam, search = ViewBag.SearhRequest }, new { @class = "btn btn-primary selected" }) }

                            else
                            {@Html.ActionLink(i.ToString(), "Table", new { page = i, sort = ViewBag.SortParam, search = ViewBag.SearhRequest }, new { @class = "btn btn-default pageBtn" })  }
                        }
                        @Html.ActionLink(">", "Table", new { page = ViewBag.CurrentPage + 1 > ViewBag.PageCount ? ViewBag.CurrentPage : ViewBag.CurrentPage + 1, sort = ViewBag.SortParam, search = ViewBag.SearhRequest }, new { @class = "btn btn-default pageBtn" })
                        }

        }


    </div>
    </div>

        <div class="scrollup">
            <i class="glyphicon glyphicon-chevron-up"></i>
        </div>
